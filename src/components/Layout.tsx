import { useTheme } from "next-themes";
import Head from "next/head";
import Image from "next/image";
import { signOut, useSession } from "next-auth/react";

type Props = {
  children?: React.ReactNode;
};

const Layout: React.FC<Props> = ({ children }) => {
  return (
    <>
      <Head>
        <title>Wordle clone</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="flex min-h-screen flex-col">
        <Nav />
        <main className="flex flex-grow">{children}</main>
      </div>
    </>
  );
};

const Nav: React.FC = () => {
  const { setTheme, resolvedTheme } = useTheme();
  const { data: sessionData } = useSession();

  return (
    <nav className="flex h-20 justify-around dark:bg-black">
      <button
        type="button"
        onClick={() => {
          setTheme(resolvedTheme === "dark" ? "light" : "dark");
        }}
      >
        {resolvedTheme === "dark" ? (
          <svg
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 24 24"
            strokeWidth={1.5}
            stroke="currentColor"
            className="h-8 w-8"
          >
            <path
              strokeLinecap="round"
              strokeLinejoin="round"
              d="M12 3v2.25m6.364.386l-1.591 1.591M21 12h-2.25m-.386 6.364l-1.591-1.591M12 18.75V21m-4.773-4.227l-1.591 1.591M5.25 12H3m4.227-4.773L5.636 5.636M15.75 12a3.75 3.75 0 11-7.5 0 3.75 3.75 0 017.5 0z"
            />
          </svg>
        ) : (
          <svg
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 24 24"
            strokeWidth={1.5}
            stroke="currentColor"
            className="h-8 w-8"
          >
            <path
              strokeLinecap="round"
              strokeLinejoin="round"
              d="M21.752 15.002A9.718 9.718 0 0118 15.75c-5.385 0-9.75-4.365-9.75-9.75 0-1.33.266-2.597.748-3.752A9.753 9.753 0 003 11.25C3 16.635 7.365 21 12.75 21a9.753 9.753 0 009.002-5.998z"
            />
          </svg>
        )}
      </button>
      <div>
        {sessionData && (
          <div className="m-4 flex gap-2 self-end">
            <Image
              alt="Profile picture"
              className="mr-1 rounded-full object-cover"
              src={sessionData.user?.image ? sessionData.user.image : ""}
              width={48}
              height={48}
            />
            <button
              className="rounded-full bg-black/10 px-10 py-3 font-semibold no-underline transition hover:bg-black/20 dark:bg-white/10 dark:text-white dark:hover:bg-white/20"
              onClick={() => signOut()}
            >
              Log out
            </button>
          </div>
        )}
      </div>
    </nav>
  );
};

export default Layout;
